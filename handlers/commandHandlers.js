const { bot, developerChatId } = require('../data');
const { mainMenuKeyboard } = require('../keyboards/keyboards');

function handleStart(msg) {
  const chatId = msg.chat.id;
  bot.sendMessage(
    chatId,
    `üåü *–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ TaskBot!* ü§ñ\n
    –Ø —Ç–≤—ñ–π –ø–æ–º—ñ—á–Ω–∏–∫ —É –ø–ª–∞–Ω—É–≤–∞–Ω–Ω—ñ –∑–∞–≤–¥–∞–Ω—å. –û—Å—å —â–æ —è –º–æ–∂—É –∑—Ä–æ–±–∏—Ç–∏ –¥–ª—è —Ç–µ–±–µ:\n
    ‚úÖ –î–æ–¥–∞—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è –¥–æ —Å–ø–∏—Å–∫—É.\n
    üìã –ü–µ—Ä–µ–≥–ª—è–¥–∞—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è.\n
    ‚è≥ –ó–∞–ø–ª–∞–Ω–æ–≤—É–≤–∞—Ç–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è.\n
    üìä –°—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –∑–≤—ñ—Ç–∏ –ø—Ä–æ –≤–∏–∫–æ–Ω–∞–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è —â–æ—Ç–∏–∂–Ω—è.\n
    –ì–æ—Ç–æ–≤–∏–π –ø–æ—á–∞—Ç–∏? –ù–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ —Ç–∞ –æ–±–µ—Ä–∏ –ø–æ—Ç—Ä—ñ–±–Ω—É –æ–ø—Ü—ñ—é! üëá`,
    { parse_mode: 'Markdown', reply_markup: mainMenuKeyboard.reply_markup },
  );
}

function handleFeedback(msg) {
  const chatId = msg.chat.id;

  bot.sendMessage(
    chatId,
    'üìù –í–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç –≤—ñ–¥–≥—É–∫—É. –ü—ñ—Å–ª—è –Ω–∞–ø–∏—Å–∞–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤ –π–æ–≥–æ, —ñ –º–∏ –ø–µ—Ä–µ–¥–∞–º–æ –π–æ–≥–æ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫—É.',
  );

  bot.once('message', (response) => {
    if (response.text) {
      bot.sendMessage(
        chatId,
        '‚úÖ –î—è–∫—É—î–º–æ –∑–∞ —Ç–≤—ñ–π –≤—ñ–¥–≥—É–∫! –ú–∏ –ø–µ—Ä–µ–¥–∞–º–æ –π–æ–≥–æ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫—É. üòä',
      );

      bot.sendMessage(
        developerChatId,
        `üì© –ù–æ–≤–∏–π –≤—ñ–¥–≥—É–∫ –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ${response.from.username || response.from.id}:\n"${response.text}"`,
      );
    } else {
      bot.sendMessage(chatId, '‚ùå –¢–∏ –Ω–µ –≤–≤—ñ–≤ —Ç–µ–∫—Å—Ç –≤—ñ–¥–≥—É–∫—É. –°–ø—Ä–æ–±—É–π —â–µ —Ä–∞–∑.');
    }
  });
}

module.exports = {
  handleStart,
  handleFeedback,
};
